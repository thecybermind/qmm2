name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
             ./.github/build/linux/init.sh
             ./.github/build/linux/release.sh
             ./.github/build/linux/debug.sh
             ./.github/build/linux/package.sh
      - name: Make Linux packages
        if: matrix.os == 'ubuntu-latest'
        run: |
             mkdir package && cd package
             cp ../README.md ../LICENSE .
             cp ../bin/qmm2.so .
             tar zcf ../qmm2-${{ github.ref_name }}.tar.gz *
             rm qmm2.so
             cp ../bin/qmm2-dbg.so .
             tar zcf ../qmm2-${{ github.ref_name }}-debug.tar.gz *			   
      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
             .\.github\build\windows\init.bat
             .\.github\build\windows\release.bat
             .\.github\build\windows\debug.bat
             .\.github\build\windows\package.bat
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: qmm2-${{ matrix.os }}
          path: qmm2-${{ github.ref_name }}.zip
          retention-days: 1
          if-no-files-found: error
      - name: Upload debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: qmm2-${{ matrix.os }}-debug
          path: qmm2-${{ github.ref_name }}-debug.zip
          retention-days: 1
          if-no-files-found: error
  tagged-release:
    name: "Release"
    needs: build
    runs-on: ubuntu-latest
    steps:
      # We don't need the repo, grab all artifacts from the build stage
      # The plugin puts each artifact in a folder of `artifactname`
      - uses: actions/download-artifact@v4
      - name: Show fetched artifacts
        run: ls -R
      - name: Create a Github Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            qmm2-ubuntu-latest/*.zip
            qmm2-windows-latest/*.zip
